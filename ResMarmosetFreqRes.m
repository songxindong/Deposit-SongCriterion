function ResMarmosetFreqRes
% RESOVABILITY in MARMOSETS
% Frequency resolution criterion analysis in marmosets using
%   'H' Harmonic Template Neuron,	Feng & Wang PNAS 2017        
%   'S' AC sAM tone response,     	Liang et al J Neurophys 2001 
%   'F' F0DL on A2:A5,          	Current
%   'E' ERB,                     	Osmanski et al J Neurosci 2013
%   'h' HTN     fitting
%   's' sAM     fitting
%   'f' F0DL    fitting

    %   reference for GUI transparency
    %       https://undocumentedmatlab.com/blog/plot-line-transparency-and-color-gradient

    % OLD DATA NOT INCLUDED
    %   'A' Audiogram,                  Osmanski & Wang Hear Res 2011 
    %   'T' AC sharply tuned,         	Bartlett et al J Neurophys 2011
    %   'Q' AC Q10,                  	Bendor et al J Neruosci 2012
    %   'O' SFOAE,                    	Bergevin et al ARO 201?


%% Data 
clear all
global D G
% D:    Data
% G:    Graphics

G.Cfg.Num = 7;
% G.Cfg.Num = 8;
switch G.Cfg.Num
    case 1;     % SPECTRAL Harmonic template neurons   
            G.Cfg.Str = '2HE3h';	G.Cfg.ERBa = [1.25];        G.Cfg.XLim = [300 50000];   G.Cfg.YLim = [10 50000];    G.Cfg.ERBaC = [1  1];
    case 2;     % TEMPORAL sAM tone response in AC
            G.Cfg.Str = '2SE3s';	G.Cfg.ERBa = 0.9;           G.Cfg.XLim = [300 50000];   G.Cfg.YLim = [10 50000];    G.Cfg.ERBaC = 1;
    case 3;     % F0DL
            G.Cfg.Str = '2FE';      G.Cfg.ERBa = 1.08;         G.Cfg.XLim = [100 50000];   G.Cfg.YLim = [10 20000];    G.Cfg.ERBaC = 1; 
            
    case 6;     % all, 3 comparing numbers
            G.Cfg.Str = '2EESHE';	G.Cfg.ERBa = [2 0.5 1];     G.Cfg.XLim = [200 50000];	G.Cfg.YLim = [10 50000];    G.Cfg.ERBaC = [0.2  0.2 1];
            
    case 7;     % Neuron both
            G.Cfg.Str = '2SHEEL3hs';G.Cfg.ERBa = [1.25 0.9];	G.Cfg.XLim = [300 50000];	G.Cfg.YLim = [10 50000];    G.Cfg.ERBaC = [1  1];    
    case 8;     % F0DLs
            G.Cfg.Str = 'E6F7f';	G.Cfg.ERBa = 1;            G.Cfg.XLim = [300 50000];	G.Cfg.YLim = [10 50000];    G.Cfg.ERBaC = [1  1]; 
    case 9;     % Neuron both
            G.Cfg.Str = '2SHEEL';	G.Cfg.ERBa = [1.25 0.9];	G.Cfg.XLim = [300 50000];	G.Cfg.YLim = [10 50000];    G.Cfg.ERBaC = [1  1];   
    otherwise;
end
D.intemethod =  'linear';

%% Figure Global Control
G.H0Mag =           3;

% Figure Neurons
G.FigNeuWidthS =     0.8;
G.FigNeuHeightS =    0.8;
G.FigNeuWidth =      NaN;
G.FigNeuHeight =     NaN;
G.FigNeuColumn =     1;

% Axes Neurons
G.AxesNeuWidthS =    1.2;
G.AxesNeuHeightS =   1.0;
G.AxesNeuHeightL =   0.2;

G.AxesNeuWidthD =    0.92;	% Weight Density: 0.92 cm/ octave
% G.AxesNeuWidthD =    0.8;	% Weight Density: 0.8 cm/ octave
G.AxesNeuHeightD =   0.5;	% Height Density: 0.5 cm/ octave
G.AxesNeuWidth =     G.AxesNeuWidthD *   log2(G.Cfg.XLim(2)/G.Cfg.XLim(1));
G.AxesNeuHeight =    G.AxesNeuHeightD *  log2(G.Cfg.YLim(2)/G.Cfg.YLim(1));   

G.AxesNeuPosition =  [	G.AxesNeuWidthS,     G.AxesNeuHeightS,...
                        G.AxesNeuWidth,      G.AxesNeuHeight];
G.FigNeuHeight =        G.AxesNeuHeightS + G.AxesNeuHeight + G.AxesNeuHeightL;
G.FigNeuPosition =   [	G.FigNeuWidthS,      G.FigNeuHeightS,...
                        G.FigNeuWidth,       G.FigNeuHeight];

G.AxesNeuTicks =[    10      20      50 ...
                    100     200     500 ...
                    1000	2000    5000 ...
                    10000   20000   50000 ...
                    100000];
G.AxesNeuTickLabels = {...
                    '10',       '20',       '50', ...
                    '100',      '200',      '500', ...
                    '1,000',	'2,000',	'5,000', ...
                    '10,000',   '20,000',   '50,000', ...
                    '100,000'};

% G.AxesNeuTicks = [   10      20      30      40      50      60      70      80      90 ...
%                     100     200     300     400     500     600     700     800     900 ...
%                     1000	2000    3000    4000    5000    6000    7000    8000    9000 ...
%                     10000   20000   30000   40000   50000   60000   70000   80000   90000 ...
%                     100000];
% G.AxesNeuTickLabels = {..
%                     '10',   '20',   '',     '',     '50',   '',     '',     '',     '', ...
%                     '100',	'200',	'',     '',     '500',  '',     '',     '',     '', ...
%                     '1000',	'2000',	'',     '',     '5000',	'',     '',     '',     '', ...
%                     '10000','20000','',     '',     '50000','',     '',     '',     '', ...
%                     '100000'};

G.LineWidthS =      1.5;            % Solid Line
G.LineWidthF =      4;              % Fainted Line
G.LineWidthE =      2;              % ERB Line
G.LineWidthD =      8;              % Density dots
G.LineAlphaFit =    0.5;            % Density dots

G.AxesCriWidthD =       0.76;            % Weight Density, in cm/ octave
G.AxesCriXTick =        [   0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09 ...
                            0.1  0.2  0.3  0.4  0.5  0.6  0.7  0.8  0.9 ...
                            1    2    3    4    5    6    7    8    9 ...
                            10];
G.AxesCriXTickLabel =   {   '',	  '0.02','','', '0.05','','',  ''   '' ...
                        	'0.1','0.2','', '', '0.5','', '',  '',  '' ...
                            '1',  '2', '',  '', '5', '',  '',  '',  '' ...
                            ''};
                        
G.FigCriNPosition =     [   11      3       10      7.2];
G.FigCriNColumn =       1;

G.AxesCriNXLim =        [0.01   10];
G.AxesCriNWidthS =      1.2;
G.AxesCriNWidth =       G.AxesCriWidthD*log2(G.AxesCriNXLim(2)/G.AxesCriNXLim(1));

G.AxesCriNAcmPosition =	[   G.AxesCriNWidthS,	0.8,...
                            G.AxesCriNWidth,    3];
G.AxesCriNAcmYLim =     [   1       64*2^(0.1/0.2)];
G.AxesCriNAcmYTick =    [   1    2    4    8    16   32   64   128];
    %             'YTick',                 [1    2    3    4    5    6    7    8    9 ...
    %                                       10   20   30   40   50   60   70   80],...
    %             'YTickLabel',           {'1',  '2', '',  '', '5',  '',  '',  '',  '' ...
    %                                      '10', '20','',  '', '50', '',  '',  ''},...
    
    G.Legend2ABGX =     700*                [1.0    2.2];
    G.Legend2ABGY =     sqrt(5000*10000)*   [0.9    2.2];
    G.Legend2AX =       G.Legend2ABGX(1)/0.9;
    G.Legend2AY =       G.Legend2ABGY.*[1/0.9*1.15 1*0.9/1.15];    
    
    G.Legend2BBGX =     0.024*              [1.0    2.2];
    G.Legend2BBGY =     14+                 [-5     5];
    G.Legend2BX =       G.Legend2BBGX(1)/0.9;
    G.Legend2BY =       G.Legend2BBGY+      [3      -3];    
    
    G.Legend2CBGX =     G.Legend2BBGX;
    G.Legend2CBGY =     4*1.8.^             [-1     1];
    G.Legend2CX =       G.Legend2BX;
    G.Legend2CY =       G.Legend2CBGY.*1.41.^[1      -1]; 
    
    G.LegendFontSize =  7;
    G.LegendFontWeight= 'bold';
    
    G.AxesAColorRES =   [0 0.5 0];
    G.AxesAColorURS =   [0 0 0.7];
    G.AxesAColorF0DL =  [0 0 0];

G.AxesCriNDenPosition =	[   G.AxesCriNWidthS,   sum(G.AxesCriNAcmPosition([2 4]))+0.2,...
                            G.AxesCriNWidth,    3];
G.AxesCriNDenYLim =     [   0       40];
G.AxesCriNDenYTick =    10:10:40;  
    
G.FigF0DLPosition =     [	1.0     1.0     8.0     5.2];
G.FigF0DLColumn =       1;

G.AxesF0DLPosition =	[   1.1     1.0     3.8     4.0];
G.AxesF0DLXLim =        [1  6];
G.AxesF0DLXTick =       2:5;  
G.AxesF0DLXTickLabel =	{'A2,110', 'A3,220', 'A4,440', 'A5,880'}; 
G.AxesF0DLXTickLabelRotation = 15;

G.AxesF0DL1YLim =       [-0.2  2.8];
G.AxesF0DL1YTick =      0.0:0.5:2.0;  

G.AxesF0DL2YLim =       1.25*4.^(-G.AxesF0DL1YLim([2 1])+2);
G.AxesF0DL2YTick =      2.^(0:1:6);   
G.AxesF0DL2Colormap =   jet(7);


G.FigCriFPosition =     [	11	4	8   5.2];

G.AxesCriFWidthS =      1.6;
G.AxesCriFHeightP =     0.2;
G.AxesCriFXLim =        [0.2    5];
G.AxesCriFWidth =       G.AxesCriWidthD*log2(G.AxesCriFXLim(2)/G.AxesCriFXLim(1));

G.AxesCriFEHeightS =    0.8;
G.AxesCriFEHeight =     2.0; 
G.AxesCriFEYLim =       [0.2 0.8];
G.AxesCriFEYTick =      0.3:0.2:0.7;
G.AxesCriFEYLabelColor =0*[1 1 1];

G.AxesCriFRHeightS =	G.AxesCriFEHeightS + G.AxesCriFEHeight + G.AxesCriFHeightP; 
G.AxesCriFRHeight =     2.0; 
G.AxesCriFRYLim =       [0.4 1.05];
G.AxesCriFRYTick =      0.4:0.2:1.0;

%% Figure & Analysis Sequences
tempERBa = 	G.Cfg.ERBa;
tempERBaC =	G.Cfg.ERBaC;
for i = 1:length(G.Cfg.Str)
    tempstr = ['Res_',G.Cfg.Str(i)];
    switch G.Cfg.Str(i)
        case 'E';   eval([tempstr '(tempERBa(1), tempERBaC(1))']);
                        tempERBa =  tempERBa(2:end);
                        tempERBaC = tempERBaC(2:end);
        otherwise;  eval(tempstr);
    end;
end

%% Boundaries & Marks
    if isfield(G.HH, 'hFigNeuAxes1')
        plot(G.Cfg.XLim, G.Cfg.XLim, '--',...
            'Parent',               G.HH.hFigNeuAxes1,...
            'linewidth',            G.LineWidthS,...
            'color',                [0 0 0]);
    end
function Res_2	
%% Figure 2: Neurons
    global D G
    G.HH.hFigNeu = figureStyled('Nature',...
                'Scaling',             	G.H0Mag,...
                'Position',           	G.FigNeuPosition,...
                'Column',               G.FigNeuColumn);
    G.HH.hFigNeuAxes1 = axes(...
                'Parent',               G.HH.hFigNeu,...
                'Position',             G.AxesNeuPosition,...
                'YScale',               'log',...
                'XScale',               'log',...                 
                'XLim',                 G.Cfg.XLim,...
                'YLim',                 G.Cfg.YLim,...
                'XTick',                G.AxesNeuTicks,...
                'YTick',                G.AxesNeuTicks,...
                'XTickLabel',           G.AxesNeuTickLabels,...
                'YTickLabel',           G.AxesNeuTickLabels,...
                'XTickLabelRotation',   15,...
                'XGrid',                'on',...
                'YGrid',                'on',...
                'Layer',                'bottom',...
                'Box',                  'off');
    G.HH.hFigNeuAxes1LabelX = xlabel('Center frequency (Hz)',...
                'Parent',               G.HH.hFigNeuAxes1,...
                'FontSize',             7,...
                'VerticalAlignment',    'Cap');
    G.HH.hFigNeuAxes1LabelY = ylabel('Frequency spacing (Hz)',...
                'Parent',               G.HH.hFigNeuAxes1,...
                'FontSize',             7,...
                'VerticalAlignment',    'middle');     

    % ISO-Harmonic Number Lines
    D.Fig.HN =  [   1       2       5 ...
                    10      20      50 ...
                    100     200     500 ...
                    1000	2000    5000];
    G.Fig.HNFSs =   G.Cfg.XLim'* (1./D.Fig.HN);
    G.Fig.HNTicks = G.Cfg.XLim(2)./G.AxesNeuTicks;
    plot(G.Cfg.XLim', G.Fig.HNFSs, ':',...
            'Parent',               G.HH.hFigNeuAxes1,...
            'LineWidth',            0.5,...
            'Color',                0.9*[1 1 1]);
    for i = 1:8 %length(D.Fig.HN)
        text(   G.Cfg.XLim(2),	G.Cfg.XLim(2)/D.Fig.HN(i), sprintf('  n=%d', D.Fig.HN(i)), ...
            'Parent',               G.HH.hFigNeuAxes1,...
            'Color',                0.8*[1 1 1],...
            'HorizontalAlignment',	'left',...
            'VerticalAlignment',	'middle');     
    end       
    text(   G.Cfg.XLim(2)+4000,	G.Cfg.YLim(1), 'Harmonic number', ...
            'Parent',               G.HH.hFigNeuAxes1,...
            'Color',                0.8*[1 1 1],...
            'HorizontalAlignment',	'left',...
            'VerticalAlignment',	'top',...
            'Rotation',             90);          
    G.HH.hFigNeuAxes2 = axes(...
                'Parent',               G.HH.hFigNeu,...
                'Position',             get(G.HH.hFigNeuAxes1, 'Position'),...
                'Color',                'none',...
                'XScale',               'log',...     
                'YScale',               'log',...
                'XLim',                 get(G.HH.hFigNeuAxes1, 'XLim'),...
                'YLim',                 get(G.HH.hFigNeuAxes1, 'YLim'),...
                'XTick',                get(G.HH.hFigNeuAxes1, 'XTick'),...
                'YTick',                fliplr(G.Cfg.XLim(2)./D.Fig.HN),...
                'XTickLabel',           {},...
                'YTickLabel',           {},...
                'Box',                  'off',...
                'XAxisLocation',        'top',...
                'YAxisLocation',        'Right'); 
	AddPartNum(G.HH.hFigNeuAxes1, 'a', 0.1, 'Middle'); 

function Res_L
	% Legends   
    global G
    %% This part it to be modified 
%     G.Legend2ABGX =     700*                [1.0    2.2];
%     G.Legend2ABGY =     sqrt(5000*10000)*   [0.9    2.2];
%     G.Legend2AX =       G.Legend2ABGX(1)/0.9;
%     G.Legend2AY =       G.Legend2ABGY.*[1/0.9*1.15 1*0.9/1.15];   
%     G.HH.hFigNeuAxes1SurfBG = surf( G.Legend2ABGX, G.Legend2ABGY, 0*[1 1; 1 1], ...
%             'Parent',               G.HH.hFigNeuAxes1,...
%             'FaceColor',            'interp',...
%             'EdgeColor',            'none');
%     colormap(1*[1 1 1]);
%     text(G.Legend2AX, G.Legend2AY(1), 'TMSN',...
%             'Parent',               G.HH.hFigNeuAxes1,...
%             'Color',                G.AxesAColorURS,...
%             'FontSize',             G.LegendFontSize,...
%             'FontWeight',           G.LegendFontWeight);   
%     text(G.Legend2AX, G.Legend2AY(2), 'HTN',...
%             'Parent',               G.HH.hFigNeuAxes1,...
%             'Color',                G.AxesAColorRES,...
%             'FontSize',             G.LegendFontSize,...
%             'FontWeight',           G.LegendFontWeight); 
    %% original version up, modified version down

%     G.Legend2ABGX =     700*                [1.0    2.2];
%     G.Legend2ABGY =     sqrt(5000*10000)*   [0.9    2.2];
%     G.Legend2AX =       G.Legend2ABGX(1)/0.9;
%     G.Legend2AY =       G.Legend2ABGY.*[1/0.9*1.15 1*0.9/1.15];   
    
	G.HH.hFigNeuAxes1SurfBG = surf( [350 2400], [2800 40000], 0*[1 1; 1 1], ...
            'Parent',               G.HH.hFigNeuAxes1,...
            'FaceColor',            'interp',...
            'EdgeColor',            'none');
	G.HH.hFigNeuAxes1SurfBG = surf( [350 4700], [18000 40000], 0*[1 1; 1 1], ...
            'Parent',               G.HH.hFigNeuAxes1,...
            'FaceColor',            'interp',...
            'EdgeColor',            'none');
    colormap(1*[1 1 1]);
    htn.x =         [1200 2000 3300];
    htn.y =         30000;
    tmsn.x =        2000;    
    tmsn.y =        12000*[4/9 2/3 1];
    legtitlex.x =	400;
    legtext.x =     760;
    tloffset.y =    0.85;
    G.LegendMinFontSize =   6;

    % TEXT: Neuron Type
    text(       legtitlex.x,            htn.y,              'HTN',...
            'Parent',               G.HH.hFigNeuAxes1,...
            'Color',                G.AxesAColorRES,...
            'FontSize',             G.LegendFontSize,...
            'FontWeight',           G.LegendFontWeight); 
    text(       legtitlex.x,            tmsn.y(end),        'TMSN',...
            'Parent',               G.HH.hFigNeuAxes1,...
            'Color',                G.AxesAColorURS,...
            'FontSize',             G.LegendFontSize,...
            'FontWeight',           G.LegendFontWeight);  
    
    % TEXT: template legends
    text(       htn.x(1),               htn.y*tloffset.y,	'CF-pF0',...
            'Parent',               G.HH.hFigNeuAxes1,...
            'FontSize',             G.LegendMinFontSize,...
            'VerticalAlignment',    'Top',...
            'HorizontalAlignment',  'Center');   
    text(       htn.x(2),               htn.y*tloffset.y,	'CF',...
            'Parent',               G.HH.hFigNeuAxes1,...
            'FontSize',             G.LegendMinFontSize,...
            'VerticalAlignment',    'Top',...
            'HorizontalAlignment',  'Center'); 
    text(       htn.x(3),               htn.y*tloffset.y,	'CF+pF0',...
            'Parent',               G.HH.hFigNeuAxes1,...
            'FontSize',             G.LegendMinFontSize,...
            'VerticalAlignment',    'Top',...
            'HorizontalAlignment',  'Center');  
    text(       legtext.x,               htn.y,              'pF0',...
            'Parent',               G.HH.hFigNeuAxes1,...
            'FontSize',             G.LegendMinFontSize,...
            'VerticalAlignment',    'Middle',...
            'HorizontalAlignment',  'Left');        
        
    text(       tmsn.x,                 tmsn.y(1)*tloffset.y,  'CF',...
            'Parent',               G.HH.hFigNeuAxes1,...
            'FontSize',             G.LegendMinFontSize,...
            'VerticalAlignment',    'Top',...
            'HorizontalAlignment',  'Center');  
    text(       legtext.x,      tmsn.y(1),          'BMF - lHW',...
            'Parent',               G.HH.hFigNeuAxes1,...
            'FontSize',             G.LegendMinFontSize,...
            'VerticalAlignment',    'Middle',...
            'HorizontalAlignment',  'Left'); 
    text(       legtext.x,      tmsn.y(2),          'BMF',...
            'Parent',               G.HH.hFigNeuAxes1,...
            'FontSize',             G.LegendMinFontSize,...
            'VerticalAlignment',    'Middle',...
            'HorizontalAlignment',  'Left'); 
    text(       legtext.x,      tmsn.y(3),          'BMF + hHW',...
            'Parent',               G.HH.hFigNeuAxes1,...
            'FontSize',             G.LegendMinFontSize,...
            'VerticalAlignment',    'Middle',...
            'HorizontalAlignment',  'Left'); 
        
    % TEMPLATES:    
    G.L.hPlotHTN = plot(...
                htn.x,                  htn.y*ones(1,3),	'-', ...
            'Parent',               G.HH.hFigNeuAxes1,...
            'linewidth',            G.LineWidthF);
	G.L.hPlotHTN.Color(4) =         G.H.Alpha;          drawnow;
    set(G.L.hPlotHTN.Edge,...
            'ColorBinding',         'interpolated',...
            'ColorData',            G.H.AlphaColorMap3);
    G.L.hPlotHTNc = plot(...
                htn.x(2),               htn.y,              '*', ...
            'Parent',               G.HH.hFigNeuAxes1,...
            'MarkerSize',           G.LineWidthF,...
            'Color',                [0      0.35        0       G.H.Alpha]);
    
    G.L.hPlotTMSN = plot(...
                tmsn.x*ones(1,3),       tmsn.y,             '-', ...
            'Parent',               G.HH.hFigNeuAxes1,...
            'linewidth',            G.LineWidthF);
	G.L.hPlotTMSN.Color(4) =        G.H.Alpha;          drawnow;
    set(G.L.hPlotTMSN.Edge,...
            'ColorBinding',         'interpolated',...
            'ColorData',            G.S.AlphaColorMap3);
    G.L.hPlotTMSNNc = plot(...
                tmsn.x,                 tmsn.y(2),          '*', ...
            'Parent',               G.HH.hFigNeuAxes1,...
            'MarkerSize',           G.LineWidthF,...
            'Color',                [0      0           0.5     G.S.Alpha]);
   
        
   %% Finish of the modification  

    
function Res_3
%% Figure Criterions
    global G
    G.HH.hFigCriN = figureStyled('Nature',...
                'Scaling',             	G.H0Mag,...
                'Position',           	G.FigCriNPosition,...
                'Column',               G.FigCriNColumn);
    G.HH.hFigCriNAxesAcm= axes(...
                'Parent',               G.HH.hFigCriN,...
                'Position',           	G.AxesCriNAcmPosition,...
                'NextPlot',             'add',...
                'Layer',                'bottom',...
                'YScale',               'log',...
                'XScale',               'log',...
                'XLim',                 G.AxesCriNXLim,...
                'XTick',                G.AxesCriXTick,...
                'XTickLabel',           G.AxesCriXTickLabel,...
                'XGrid',                'on',...
                'YLim',                 G.AxesCriNAcmYLim,...
                'YTick',                G.AxesCriNAcmYTick,...
                'YGrid',                'on');  
    G.HH.hFigCriNAxesDen = axes(...
                'Parent',               G.HH.hFigCriN,...
                'Position',           	G.AxesCriNDenPosition,...
                'NextPlot',             'add',...
                'Layer',                'bottom',...
                'YScale',               'linear',...
                'XScale',               'log',...
                'XLim',                 G.AxesCriNXLim,...
                'XTick',                G.AxesCriXTick,...
                'XTickLabel',           {},...
                'XGrid',                'on',...
                'YLim',                 G.AxesCriNDenYLim,...
                'YTick',                G.AxesCriNDenYTick,...
                'YGrid',                'on'); 
	% Legends        
    G.HH.hFigCriNAxesAcmSurfBG = surf( G.Legend2CBGX, G.Legend2CBGY, 0*[1 1; 1 1], ...
            'Parent',               G.HH.hFigCriNAxesAcm,...
            'FaceColor',            'interp',...
            'EdgeColor',            'none');
    colormap(1*[1 1 1]);
    text(G.Legend2CX, G.Legend2CY(1), 'TMSN',...
            'Parent',               G.HH.hFigCriNAxesAcm,...
            'Color',                G.AxesAColorURS,...
            'FontSize',             G.LegendFontSize,...
            'FontWeight',           G.LegendFontWeight); 
    text(G.Legend2CX, G.Legend2CY(2), 'HTN',...
            'Parent',               G.HH.hFigCriNAxesAcm,...
            'Color',                G.AxesAColorRES,...
            'FontSize',             G.LegendFontSize,...
            'FontWeight',           G.LegendFontWeight); 
    G.HH.hFigCriNAxesDenSurfBG = surf( G.Legend2BBGX, G.Legend2BBGY, 0*[1 1; 1 1], ...
            'Parent',               G.HH.hFigCriNAxesDen,...
            'FaceColor',            'interp',...
            'EdgeColor',            'none');
    colormap(1*[1 1 1]);
    text(G.Legend2BX, G.Legend2BY(1), 'TMSN',...
            'Parent',               G.HH.hFigCriNAxesDen,...
            'Color',                G.AxesAColorURS,...
            'FontSize',             G.LegendFontSize,...
            'FontWeight',           G.LegendFontWeight); 
    text(G.Legend2BX, G.Legend2BY(2), 'HTN',...
            'Parent',               G.HH.hFigCriNAxesDen,...
            'Color',                G.AxesAColorRES,...
            'FontSize',             G.LegendFontSize,...
            'FontWeight',           G.LegendFontWeight); 
    % Labels
    G.HH.hFigCriNAxesAcmXLabel = xlabel({'Resolution criterion (ERB)'},...
                'Parent',               G.HH.hFigCriNAxesAcm,...
                'HorizontalAlignment',  'Center',...
                'VerticalAlignment',    'Cap');
    G.HH.hFigCriNAxesAcmYLabel = ylabel({'number of neurons', 'falsely classified'},...
                'Parent',               G.HH.hFigCriNAxesAcm,...
                'VerticalAlignment',    'Bottom');
    G.HH.hFigCriNAxesDenYLabel = ylabel({'number of neurons', 'at criterion'},...
                'Parent',               G.HH.hFigCriNAxesDen,...
                'FontSize',             7,...
                'VerticalAlignment',    'Bottom');
    G.HH.hFigCriNAxesAcmYLabel.Position(1) = 0.007;
    G.HH.hFigCriNAxesDenYLabel.Position(1) = 0.007;
	AddPartNum(G.HH.hFigCriNAxesDen, 'b', 0.1, 'Middle');
	AddPartNum(G.HH.hFigCriNAxesAcm, 'c', 0.1, 'Middle');  

function Res_6	
%% Figure : F0DL
    global G
    G.HH.hFigF0DL = figureStyled('Nature',...
                'Scaling',             	G.H0Mag,...
                'Position',           	G.FigF0DLPosition,...
                'Column',               G.FigF0DLColumn); 
    G.HH.hFigF0DLAxes2 = axes(...
                'Parent',               G.HH.hFigF0DL,...
                'Position',             G.AxesF0DLPosition,...
                'Color',                'none',... 
                'Layer',                'bottom',...
                'Box',                  'off',...
                'YScale',               'log',...
                'YDir',                 'reverse',...
                'XLim',                 G.AxesF0DLXLim,...
                'YLim',                 G.AxesF0DL2YLim,...
                'XTick',                G.AxesF0DLXTick,...
                'YTick',                G.AxesF0DL2YTick,...
                'XTickLabel',           {},...
                'XAxisLocation',        'top',...
                'YAxisLocation',        'Right'); 
    G.HH.hFigF0DLAxes1 = axes(...
                'Parent',               G.HH.hFigF0DL,...
                'Position',             G.AxesF0DLPosition,...
                'Color',                'none',... 
                'Layer',                'bottom',...
                'Box',                  'off',...
                'XLim',                 G.AxesF0DLXLim,...
                'XTick',                G.AxesF0DLXTick,...
                'XTickLabel',           G.AxesF0DLXTickLabel,...
                'XTickLabelRotation',   G.AxesF0DLXTickLabelRotation,...
                'YLim',                 G.AxesF0DL1YLim,....
                'YTick',                G.AxesF0DL1YTick,...
                'XGrid',                'on',...
                'YGrid',                'on');           
    G.HH.hFigF0DLAxes1LabelX = xlabel('F0 (music scale, Hz)',...
                'Parent',               G.HH.hFigF0DLAxes1,...
                'FontSize',             7,...
                'VerticalAlignment',    'Cap');
    G.HH.hFigF0DLAxes1LabelY = ylabel('F0DL (semitone)',...
                'Parent',               G.HH.hFigF0DLAxes1,...
                'FontSize',             7,...
                'VerticalAlignment',    'Baseline');  
    G.HH.hFigF0DLAxes2LabelY = ylabel({'Estimated number of resolved harmonics'},...
                'Parent',               G.HH.hFigF0DLAxes2,...
                'FontSize',             7,...
                'VerticalAlignment',    'Cap');    
    G.HH.hFigF0DLAxes2LabelY.Position(2) = 4.1;           
	AddPartNum(G.HH.hFigF0DLAxes1, 'a', 0.1, 'Cap');
            
function Res_7
%% Figure Criterions: F0DL Modeling
    global G
    G.HH.hFigCriF = figureStyled('Nature',...
                'Scaling',             	G.H0Mag,...
                'Position',           	G.FigCriFPosition,...
                'Column',               1);          
    G.HH.hFigCriFAxesR= axes(...
                'Parent',               G.HH.hFigCriF,...
                'Position',           	[   G.AxesCriFWidthS	G.AxesCriFRHeightS,...
                                            G.AxesCriFWidth     G.AxesCriFRHeight],...
                'NextPlot',             'add',...
                'XScale',               'log',...
                'XLim',                 G.AxesCriFXLim,...
                'XTick',                G.AxesCriXTick,...
                'XTickLabel',           {},...
                'XGrid',                'on',...
                'YLim',                 G.AxesCriFRYLim,...
                'YTick',                G.AxesCriFRYTick,...
                'YGrid',                'on');  
    G.HH.hFigCriFAxesE = axes(...
                'Parent',               G.HH.hFigCriF,...
                'Position',           	[   G.AxesCriFWidthS	G.AxesCriFEHeightS,...
                                            G.AxesCriFWidth     G.AxesCriFEHeight],...  
                'NextPlot',             'add',...
                'TickLabelInterpreter', 'tex',...
                'XScale',               'log',...
                'XLim',                 G.AxesCriFXLim,...
                'XTick',                G.AxesCriXTick,...
                'XTickLabel',           G.AxesCriXTickLabel,...
                'XGrid',                'on',...
                'YLim',                 G.AxesCriFEYLim,...
                'YTick',                G.AxesCriFEYTick,...
                'YGrid',                'on');         
    for i=1:length(G.HH.hFigCriFAxesE.YTickLabel)
        G.HH.hFigCriFAxesE.YTickLabel{i} = ...
            sprintf('\\color[rgb]{%f,%f,%f}%s', G.AxesCriFEYLabelColor,...
                G.HH.hFigCriFAxesE.YTickLabel{i});
    end
    G.HH.hFigCriFAxesEXLabel = xlabel({'Resolution criterion (ERB)'},...
                'Parent',               G.HH.hFigCriFAxesE,...
                'HorizontalAlignment',  'Center',...
                'FontSize',             7,...
                'VerticalAlignment',    'Cap');  
    G.HH.hFigCriFAxesRYLabel = ylabel({'R^2 of the F0DL', 'model fitting'},...
                'Parent',               G.HH.hFigCriFAxesR,...
                'FontSize',             7,...
                'VerticalAlignment',    'Bottom');  
    G.HH.hFigCriFAxesEYLabel = ylabel({'F0DL error from', 'model (semitone)'},...
                'Parent',               G.HH.hFigCriFAxesE,...
                'Color',                G.AxesCriFEYLabelColor,...
                'FontSize',             7,...
                'VerticalAlignment',    'Bottom');   
	AddPartNum(G.HH.hFigCriFAxesR, 'b', 0.1, 'Cap');    
	AddPartNum(G.HH.hFigCriFAxesE, 'c', 0.1, 'Cap');
    
    
%%  'H' Harmonic Template Neuron,	Feng & Wang PNAS 2017 
function Res_H
    global D G 
    load AC_HTN_Final    
    D.H.FS =    HTN_F0*1000;
    D.H.CF =    HTN_HN.*D.H.FS;
    D.H.FSs =	(ones(3,1)*HTN_F0*1000);
    D.H.CFs =	[HTN_HN-1;   HTN_HN;     HTN_HN+1].*D.H.FSs;

    % green
    G.H.ColorSideHSV =      [1/3    0.2     0.9];
    G.H.ColorCentHSV =      [1/3    1       0.5];  
    G.H.ColorSideRGB =      hsv2rgb(G.H.ColorSideHSV);
    G.H.ColorCentRGB =      hsv2rgb(G.H.ColorCentHSV);
    G.H.Alpha =             0.75;
    G.H.AlphaColorMap2 =	uint8(255*[[G.H.ColorCentRGB; G.H.ColorSideRGB]'; G.H.Alpha*ones(1,2)]);
    G.H.AlphaColorMap3 =	uint8(255*[[G.H.ColorSideRGB; G.H.ColorCentRGB; G.H.ColorSideRGB]'; G.H.Alpha*ones(1,3)]);

    G.H.hPlot = plot(D.H.CFs,   D.H.FSs,	'-', ...
            'Parent',               G.HH.hFigNeuAxes1,...
            'linewidth',            G.LineWidthF);
    drawnow;
    for i = 1:length(G.H.hPlot)
        G.H.hPlot(i).Color(4) =     G.H.Alpha;     
        switch size(G.H.hPlot(i).Edge.VertexData, 2)
            case 2; set(G.H.hPlot(i).Edge,...
            'ColorBinding',         'interpolated',...
            'ColorData',            G.H.AlphaColorMap2);
            case 3; set(G.H.hPlot(i).Edge,...
            'ColorBinding',         'interpolated',...
            'ColorData',            G.H.AlphaColorMap3);
            otherwise
        end
    end
    G.H.hPlotC = plot(D.H.CF,    D.H.FS,     '*', ...
            'Parent',               G.HH.hFigNeuAxes1,...
            'MarkerSize',           G.LineWidthF,...
            'Color',                [0 0.35 0    G.H.Alpha]);
	G.H.hPlotC(1).Color(4) =        G.H.Alpha;     
    
    
%%  'S' AC sAM tone response,     	Liang et al J Neurophys 2001 
function Res_S
    global D G
    AC_sam_analysis_v2;
    close(gcf);
	% result=[result; filenum unit cf totalbw bmf lowval highval cf/lowval*1000 cf/highval*1000];	
    %   1       2       3       4       5       6       7      
    %   filenum unit    cf      totalbw bmf     lowval  highval 
    %   8       9
    %   cf/lowval*1000 cf/highval*1000];	
    D.S.FS =	result(:,5);
    D.S.CF =	result(:,3)*1000;
    D.S.FSs =	result(:, [6 5 7])';
    D.S.CFs =	ones(3,1)*result(:,3)'*1000;
    
	% blue
    G.S.ColorSideHSV =      [2/3    0.1     1];
    G.S.ColorCentHSV =      [2/3    1       0.8];  
    G.S.ColorSideRGB =      hsv2rgb(G.S.ColorSideHSV);
    G.S.ColorCentRGB =      hsv2rgb(G.S.ColorCentHSV);
    G.S.Alpha =             0.75;
    G.S.AlphaColorMap3 =	uint8(255*[[G.S.ColorSideRGB; G.S.ColorCentRGB; G.S.ColorSideRGB]'; G.S.Alpha*ones(1,3)]);
    
    G.S.hPlot = plot(D.S.CFs,   D.S.FSs,	'-', ...
            'Parent',               G.HH.hFigNeuAxes1,...
            'linewidth',            G.LineWidthF);
    drawnow;
    for i = 1:length(G.S.hPlot)
        G.S.hPlot(i).Color(4) =     G.S.Alpha;     
        set(G.S.hPlot(i).Edge,...
            'ColorBinding',         'interpolated',...
            'ColorData',            G.S.AlphaColorMap3);
    end
    plot(D.S.CF,    D.S.FS,     '*', ...
            'Parent',               G.HH.hFigNeuAxes1,...
            'MarkerSize',           G.LineWidthF,...
            'Color',                [0  0   0.5]);
    

%%   'F' F0DL on A2:A5,          	Current
function Res_F    
    global D G 
    D.F.F0MScale =  2:5;
    D.F.F0s =       440*2.^((D.F.F0MScale)-4);
    D.F.F0DLsmall =	[...		
                    1.195   0.930   0.385   0.759;  % 13W
                    1.755	1.218   0.467   0.500;  % 4Y
                    1.020   0.946   0.572   0.529;  % 61Z
                    1.568   1.250   0.567   0.600;  % 119B
                    1.472   0.930   0.482   0.300;  % 129A
                    ];
	%     D.F.F0DLs =     D.F.FSs'*ones(1,4).*(2.^(D.F.F0DLsemitones/12)-1);
    D.F.F0DLsm =    mean(D.F.F0DLsmall([2 3 4 5],:));
    D.F.F0DLsd =    std(D.F.F0DLsmall([2 3 4 5],:));
    
    D.F.as =        0.6:0.2:1.8;
    D .F.aERB =      D.E.ERBraw(:,1)*D.F.as;
    D.F.CFs =       D.E.ERBraw(:,3);
    D.F.CFint =     zeros(length(D.F.F0s'), length(D.F.as));    
    for i = 1:length(D.F.as)
        % intepolate CFs for F0s of F0DLs 
        D.F.CFint(:,i) =	exp(interp1(log(D.F.aERB(:,i)), log(D.F.CFs), log(D.F.F0s'), D.intemethod, 'extrap')); 
        % Resolved harmonic number for each F0
        D.F.RHNint(:,i) =   D.F.CFint(:,i)./D.F.F0s';        
    end  
        surf( [4.1 5.8], [1.1 G.AxesF0DL1YLim(2)-0.1], 0*[1 1; 1 1], ...
            'Parent',               G.HH.hFigF0DLAxes1,...
            'FaceColor',            'interp',...
            'EdgeColor',            'none');    
        colormap(1*[1 1 1])
    for i = 1:length(D.F.as)
        plot(2:5, D.F.RHNint(:,i),...
            'parent',               G.HH.hFigF0DLAxes2,...
            'Color',                G.AxesF0DL2Colormap(i,:),...
            'linewidth',            G.LineWidthS);
        plot([4.2 4.6], 1.0+i*0.2*[1 1],...
            'Parent',               G.HH.hFigF0DLAxes1,...
            'Color',                G.AxesF0DL2Colormap(i,:),...
            'linewidth',            G.LineWidthS);   
        text(4.7,       1.0+i*0.2,      [sprintf('%2.1f',(0.2*i+0.4)), ' ERB'],...
            'Parent',               G.HH.hFigF0DLAxes1,...
            'FontSize',             6);  
    end
        plot(2:5, D.F.F0DLsm, ':*',...
            'Parent',               G.HH.hFigF0DLAxes1,...
            'linewidth',            G.LineWidthS);
        i = length(D.F.as)+1;       
        plot( 4.2, 1.0+i*0.2* 1,    '*',...
            'Parent',               G.HH.hFigF0DLAxes1,...
            'linewidth',            G.LineWidthS); 
        plot([4.2 4.7], 1.0+i*0.2*[1 1], ':',...
            'Parent',               G.HH.hFigF0DLAxes1,...
            'linewidth',            G.LineWidthS);   
        text(4.8,       1.0+i*0.2,      'F0DL',...
            'Parent',               G.HH.hFigF0DLAxes1,...
            'FontSize',             6);  

        
%%   'E' ERB,                     	Osmanski et al J Neurosci 2013 
function Res_E(ERBa, ERBaC)
    % Resolvability by tone detection from noise notch (M. Osmanski @2012.11.06)
    % methods as classical method (Glasberg & Moore, 1990)
    global D G
    
    % ERB mean, ERB std, freq
    D.E.ERBraw = [...
        90.96    0      250
        126.85   21.95  500
        180.51   40.27  1000
        460.83   97.78  7000
        2282.71  285.72 16000];
    D.E.ERBraw = D.E.ERBraw(2:end,:);

    D.E.freqERB =   500*2.^(0:0.1:5.0); 
%     D.E.ERB =       interp1(D.E.ERBraw(:,3), D.E.ERBraw(:,1), D.E.freqERB,'spline');
    D.E.ERB =       exp(interp1(log(D.E.ERBraw(:,3)), log(D.E.ERBraw(:,1)), log(D.E.freqERB),	D.intemethod));
    
    D.E.FSs =       ERBa*D.E.ERB;
    D.E.CFs =       D.E.freqERB;
     
    if isfield(G, 'HH');   
        if isfield(G.HH, 'hFigNeu');
            G.E.hPlotC = plot(D.E.CFs, D.E.FSs, ':',...
            'Parent',               G.HH.hFigNeuAxes1,...
            'linewidth',            G.LineWidthE,...
            'color',                0*[1 1 1]);
            G.E.hPlotC.Color(4) =           ERBaC;     
        end
    end

%%  'h' HTN fitting
function Res_h

    global D G
    D.h.as =            1*10.^(-2:(1/200):1);
    D.h.aERB =          D.E.ERBraw(:,1)*D.h.as;
    D.h.CFs =           D.E.ERBraw(:,3);
    D.h.CFrange =       D.H.CF';
    D.h.CFrange2 =      D.H.CF'+ D.H.FS';
    D.h.CFrange3 =      D.H.CF'- D.H.FS';
    D.h.FSint =         zeros(length(D.h.CFrange), length(D.h.as));
    D.h.FSint2 =        zeros(length(D.h.CFrange2), length(D.h.as));
    D.h.FSs =           D.H.FS';
    for i = 1:length(D.h.as)
        D.h.FSint(:,i) =	exp(interp1(log(D.h.CFs), log(D.h.aERB(:,i)), log(D.h.CFrange),     D.intemethod, 'extrap'));        
        D.h.FSint2(:,i) =	exp(interp1(log(D.h.CFs), log(D.h.aERB(:,i)), log(D.h.CFrange2),    D.intemethod, 'extrap'));        
        D.h.FSint3(:,i) =	exp(interp1(log(D.h.CFs), log(D.h.aERB(:,i)), log(D.h.CFrange3),    D.intemethod, 'extrap'));        
%         G.h.hPlotC(i) = plot(D.h.CFrange, D.h.FSint(:,i), '*',...
%             'Parent',               G.HH.hFigNeuAxes1,...
%             'linewidth',            1,...
%             'color',                [1 0 0]);  
%         D.h.Ratio(i) =  sum(...
%             D.h.FSint(:,i)>D.h.FSs & ...
%             D.h.CFrange < 16000);
%         D.h.Ratio2(i) = sum(...
%             D.h.FSint2(:,i)>D.h.FSs2 & ...
%             D.h.CFrange2 < 16000);
        D.h.Ratio(i) =	sum(...
            D.h.FSint(:,i)> D.h.FSs);
        D.h.Ratio2(i) =	sum(...
            D.h.FSint2(:,i)>D.h.FSs); 
        D.h.Density(i) = sum((D.h.FSint2(:,i)>D.h.FSs).*(D.h.FSint3(:,i)<D.h.FSs));
    end
    [D.h.fitobjD,D.h.fitgofD,D.h.fitoutputD] = fit( log(D.h.as)', D.h.Density',...
        fittype('a/(1+exp(-(x-b)/c))'),...
            'StartPoint',           [30 0 0.5]); 
    D.h.Densityfit = ...
        D.h.fitobjD.a./(1+exp(-(log(D.h.as)-D.h.fitobjD.b)/D.h.fitobjD.c));
    D.h.DensityTHD = exp(D.h.fitobjD.b);
    plot( D.h.as, D.h.Ratio,        ':',...
            'Parent',               G.HH.hFigCriNAxesAcm,...
            'LineWidth',            G.LineWidthS,...
            'Color',                G.AxesAColorRES);
    plot( D.h.as, D.h.Ratio2,       '-',...
            'Parent',               G.HH.hFigCriNAxesAcm,...
            'LineWidth',            G.LineWidthS,...
            'Color',                G.AxesAColorRES);
    
    plot( D.h.as, D.h.Density,       '.',...
            'Parent',               G.HH.hFigCriNAxesDen,...
            'MarkerSize',           G.LineWidthD,...
            'Color',                G.AxesAColorRES);   
    G.HH.hFigCriNAxesDenLineHfit = plot( D.h.as, D.h.Densityfit,    '-',...
            'Parent',               G.HH.hFigCriNAxesDen,...
            'lineWidth',            G.LineWidthS);
	G.HH.hFigCriNAxesDenLineHfit.Color(4) = G.LineAlphaFit; 

%%  's' sAM fitting
function Res_s

    global D G
    D.s.as =            1*10.^(-2:(1/200):1);
    D.s.aERB =          D.E.ERBraw(:,1)*D.s.as;
    D.s.CFs =           D.E.ERBraw(:,3);
    D.s.CFrange =       D.S.CF;
    D.s.FSint =         zeros(length(D.s.CFrange), length(D.s.as));
    D.s.FSs =           D.S.FS;
    D.s.FSs2 =          D.S.FSs(3,:)';
    D.s.FSs3 =          D.S.FSs(1,:)';
    for i = 1:length(D.s.as)
        D.s.FSint(:,i) =	exp(interp1(log(D.s.CFs), log(D.s.aERB(:,i)), log(D.s.CFrange),     D.intemethod, 'extrap'));
%         G.h.hPlotC(i) = plot(D.s.CFrange, D.s.FSint(:,i), '*',...
%             'Parent',               G.HH.hFigNeuAxes1,...
%             'linewidth',            1,...
%             'color',                [1 0 0]);  
        D.s.Ratio(i) =	sum(...
            D.s.FSint(:,i)< D.s.FSs);
        D.s.Ratio2(i) =	sum(...
            D.s.FSint(:,i)< D.s.FSs2); 
        D.s.Density(i) = sum((D.s.FSint(:,i)>D.s.FSs3).*(D.s.FSint(:,i)<D.s.FSs2));      
    end
    [D.s.fitobjD,D.s.fitgofD,D.s.fitoutputD] = fit( log(D.s.as)', D.s.Density',...
        fittype('a/(1+exp((x-b)/c))'),...
            'StartPoint',           [30 0 0.5]); 
    D.s.Densityfit = ...
        D.s.fitobjD.a./(1+exp((log(D.s.as)-D.s.fitobjD.b)/D.s.fitobjD.c));
    D.s.DensityTHD = exp(D.s.fitobjD.b);
    plot( D.s.as, D.s.Ratio,        ':',...
            'Parent',               G.HH.hFigCriNAxesAcm,...
            'LineWidth',            G.LineWidthS,...
            'Color',                G.AxesAColorURS);
    plot( D.s.as, D.s.Ratio2,       '-',...
            'Parent',               G.HH.hFigCriNAxesAcm,...
            'LineWidth',            G.LineWidthS,...
            'Color',                G.AxesAColorURS);
        
    plot( D.s.as, D.s.Density,       '.',...
            'Parent',               G.HH.hFigCriNAxesDen,...
            'MarkerSize',           G.LineWidthD,...
            'Color',                G.AxesAColorURS); 
    G.HH.hFigCriNAxesDenLineSfit = plot( D.s.as, D.s.Densityfit,    '-',...
            'Parent',               G.HH.hFigCriNAxesDen,...
            'lineWidth',            G.LineWidthS);     
	G.HH.hFigCriNAxesDenLineSfit.Color(4) = G.LineAlphaFit;
    
%%  'f' F0DL fitting
function Res_f

    global D G
    % load FDL 
    load FDL_02_DataReady
    D.f.FDL_freqs =     FDL.Fig1.FreqNumSeq;
    D.f.FDL_FDLs =      FDL.Fig2.FDLmean;  
    D.f.F0DLs =         D.F.F0DLsm';
    % load ERB
%     D.f.as =            1*2.^(-4:(1/12):4);
%     D.f.as =            1*2.^(-4:(1/2):4);
%     D.f.as =            1*2.^(-5/3:(1/12):5/6);
    D.f.as =            0.5:0.01:1.85;
    D.f.aERB =          D.E.ERBraw(:,1)*D.f.as;
    D.f.CFs =           D.E.ERBraw(:,3);

    D.f.F0range =       D.F.F0s';
    D.f.CFint =         zeros(length(D.f.F0range), length(D.f.as));
    D.f.F0DLestP =      zeros(length(D.f.F0range), length(D.f.as));
    D.f.F0DLestC =      zeros(length(D.f.F0range), length(D.f.as));
    for i = 1:length(D.f.as)
        % intepolate CFs for F0s of F0DLs 
        D.f.CFint(:,i) =	exp(interp1(log(D.f.aERB(:,i)), log(D.f.CFs), log(D.f.F0range),	D.intemethod, 'extrap')); 
%         G.f.hPlotC(i) = plot(D.f.CFint(:,i), D.f.F0range, '-',...
%             'Parent',               G.HH.hFigNeuAxes1,...
%             'linewidth',            1,...
%             'color',                [1 0 0]); 
        % Resolved harmonic number for each F0
        D.f.RHNint(:,i) =   floor(D.f.CFint(:,i)./D.f.F0range);        
        % Calculate the predicted F0DL
        for j = 1:length(D.f.F0range)
            D.f.CurF0 =     D.f.F0range(j);
            D.f.CurHrange = D.f.CurF0*(1:D.f.RHNint(j,i));
         	D.f.CurFDLint =	interp1(log(D.f.FDL_freqs), D.f.FDL_FDLs, log(D.f.CurHrange),	'spline', 'extrap');
            D.f.F0DLestP(j,i) = sum(D.f.CurFDLint.^-2)^-(1/2);
            D.f.F0DLestC(j,i) = sum(D.f.CurFDLint.^-1)^-(1/1);
        end        
        % Fitting for real F0DL
%         [~,D.f.gofP(i),~] = fit(D.f.F0DLs, D.f.F0DLestP(:,i),	'poly1');
%         [~,D.f.gofC(i),~] = fit(D.f.F0DLs, D.f.F0DLestC(:,i),	'poly1');
        [~,D.f.gofP(i),~] = fit(D.f.F0DLestP(:,i),  D.f.F0DLs, 	'poly1');
        [~,D.f.gofC(i),~] = fit(D.f.F0DLestC(:,i),  D.f.F0DLs, 	'poly1');
        D.f.RSP(i) =	D.f.gofP(i).rsquare;
        D.f.RSC(i) =	D.f.gofC(i).rsquare;
        D.f.aRSP(i) =	D.f.gofP(i).adjrsquare;
        D.f.aRSC(i) =	D.f.gofC(i).adjrsquare;
    end    
        D.f.F0DLstdP = sqrt(mean(( D.f.F0DLestP -D.f.F0DLs*ones(1,length(D.f.as)) ).^2));
        D.f.F0DLstdC = sqrt(mean(( D.f.F0DLestC -D.f.F0DLs*ones(1,length(D.f.as)) ).^2));
    plot(D.f.as, D.f.F0DLstdP,'-', ...
            'LineWidth',            G.LineWidthS,...
            'Color',                G.AxesCriFEYLabelColor,...
            'Parent',               G.HH.hFigCriFAxesE); 
    plot(D.f.as, D.f.RSP,'-', ...
            'LineWidth',            G.LineWidthS,...
            'Parent',               G.HH.hFigCriFAxesR); 
    plot(D.f.as, D.f.aRSP,':', ...
            'LineWidth',            G.LineWidthS,...
            'Parent',               G.HH.hFigCriFAxesR);  
        
% 	G.hhhh = surf( G.AxesALegendBGX, G.AxesALegendBGY(2:3), 0*[1 1; 1 1], ...
%             'Parent',               G.HH.hFigCriNAxesAcm,...
%             'FaceColor',            'interp',...
%             'EdgeColor',            'none');
%     colormap(1*[1 1 1])     
%     plot(G.AxesALegendX(1:2),	G.AxesALegendY(3,1:2), '-',...
%             'Parent',               G.HH.hFigCriNAxesAcm,...
%             'LineWidth',            G.LineWidthS,...
%             'Color',                G.AxesAColorF0DL);
%     plot(G.AxesALegendX(1:2),	G.AxesALegendY(4,1:2), ':',...
%             'Parent',               G.HH.hFigCriNAxesAcm,...
%             'LineWidth',            G.LineWidthS,...
%             'Color',                G.AxesAColorF0DL);   
%     text(G.AxesALegendX(3),     G.AxesALegendY(3,3), 'peripheral',...
%             'Parent',               G.HH.hFigCriNAxesAcm,...
%             'FontSize',             6);  
%     text(G.AxesALegendX(3),     G.AxesALegendY(4,3), 'central',...
%             'Parent',               G.HH.hFigCriNAxesAcm,...
%             'FontSize',             6);  

function AddPartNum(h, Num, horizontalposition, verticalalignment)
    hparent =   get(h, 'parent');
    hposition = get(h, 'position');
    h2 = axes(...
            'Parent',               hparent,...
            'Position',             hposition,...
            'Layer',                'bottom',...
            'XLim',                 [hposition(1) sum(hposition([1 3]))],...
            'YLim',                 [hposition(2) sum(hposition([2 4]))],...
            'XTick',                [],...
            'YTick',                [],...
            'Color',                'none');
    h3 = text(horizontalposition, sum(hposition([2 4])), Num,...
            'Parent',               h2,...
         	'FontSize',             8,...
         	'FontWeight',           'bold',...
         	'HorizontalAlignment',	'left',...
         	'VerticalAlignment',	verticalalignment);
